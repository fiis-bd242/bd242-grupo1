package com.example.yapeback.service;

import com.example.yapeback.data.Prototipo;
import com.example.yapeback.data.Audiencia;
import com.example.yapeback.interfaces.PrototipoServiceInterface;
import jakarta.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;
import java.util.List;

@Service
public class PrototipoService implements PrototipoServiceInterface {

    private final JdbcTemplate jdbcTemplate;
    private final AudienciaService audienciaService;

    @Autowired
    public PrototipoService(JdbcTemplate jdbcTemplate, AudienciaService audienciaService) {
        this.jdbcTemplate = jdbcTemplate;
        this.audienciaService = audienciaService;
    }
    
    @Transactional
    @Override
    public Prototipo crearPrototipo(Prototipo prototipo, Audiencia audiencia, String objetivosStr, List<Integer> codCanales) {
        // Crear la audiencia y obtener su id_audiencia
        Audiencia createdAudiencia = audienciaService.crearAudiencia(audiencia);
        String idAudiencia = createdAudiencia.getId_audiencia();

        // Insertar el prototipo y obtener el cod_prototipo generado
        String insertPrototipoSql = "INSERT INTO Prototipo (nombre_prot, descripcion, Prop_presupuesto, Fecha_creacion, Prop_audiencia, ID_empleado) " +
                                    "VALUES (?, ?, ?, ?, ?, ?) RETURNING cod_prototipo";
        Integer codPrototipo = jdbcTemplate.queryForObject(insertPrototipoSql,
                                                           Integer.class,
                                                           prototipo.getNombre_prot(),
                                                           prototipo.getDescripcion(),
                                                           prototipo.getProp_presupuesto(),
                                                           LocalDateTime.now(),
                                                           idAudiencia,
                                                           prototipo.getID_empleado());

        // Establecer el id_audiencia y cod_prototipo en el prototipo
        prototipo.setProp_audiencia(idAudiencia);
        prototipo.setCod_prototipo(codPrototipo);

        // Crear los objetivos y asociarlos al prototipo
        crearObjetivos(codPrototipo, objetivosStr);

        // Asociar el prototipo con los canales proporcionados
        asociarPrototipoConCanales(codPrototipo, codCanales);

        return prototipo;
    }


    public void crearObjetivos(int codPrototipo, String objetivosStr) {
        // Dividir los objetivos por coma
        String[] objetivos = objetivosStr.split(",");

        // Insertar cada objetivo en la base de datos
        String sql = "INSERT INTO Objetivos (cod_prototipo, descripcion) VALUES (?, ?)";
        for (String objetivo : objetivos) {
            // Limpiar los espacios adicionales que puedan quedar
            objetivo = objetivo.trim();
            jdbcTemplate.update(sql, codPrototipo, objetivo);
        }
    }
    
    
    @Override
    public void asociarPrototipoConCanales(int codPrototipo, List<Integer> codCanales) {
        if (codCanales == null || codCanales.isEmpty()) {
            System.out.println("La lista de canales está vacía o es null.");
            return;
        }

        String sql = "INSERT INTO prototipoxcanal (cod_prototipo, cod_canal) VALUES (?, ?)";
        for (Integer codCanal : codCanales) {
            try {
                int rowsAffected = jdbcTemplate.update(sql, codPrototipo, codCanal);
                if (rowsAffected > 0) {
                    System.out.println("Asociación exitosa en prototipoxcanal para canal ID: " + codCanal);
                } else {
                    System.out.println("No se insertó la asociación para canal ID: " + codCanal);
                }
            } catch (Exception e) {
                e.printStackTrace();
                System.out.println("Error al intentar asociar canal ID: " + codCanal + " con el prototipo.");
            }
        }
    }

	

}
