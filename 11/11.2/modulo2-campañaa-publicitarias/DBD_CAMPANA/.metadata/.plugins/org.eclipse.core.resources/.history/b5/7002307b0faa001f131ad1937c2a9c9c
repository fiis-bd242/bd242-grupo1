package com.example.yapeback.service;


import com.example.yapeback.interfaces.RecursosRepository;
import com.example.yapeback.interfaces.RecursosServiceInterface;
import com.example.yapeback.model.Recursos;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

@Service
public class RecursosService implements RecursosServiceInterface {

    private final String RUTA_DIRECTORIO = "C:/uploads/";

    @Autowired
    private RecursosRepository recursosRepository;

    @Override
    public void guardarRecurso(Recursos recurso) {
        recursosRepository.save(recurso);
    }
    

    
    public Recursos encontrarPorPrototipoYTipo(Integer cod_prototipo, Integer id_tipo_recurso) {
        return recursosRepository.findByCodPrototipoAndIdTipoRecurso(cod_prototipo, id_tipo_recurso);
    }
    @Override
    public void actualizarUrl_recurso(String url_recurso, Integer cod_prototipo, Integer id_tipo_recurso) {
        recursosRepository.actualizarUrlRecurso(url_recurso, cod_prototipo, id_tipo_recurso);
    }

    @Override
    public String guardarArchivo(MultipartFile file) {
        String nombreArchivo = System.currentTimeMillis() + "_" + file.getOriginalFilename();
        Path rutaArchivo = Paths.get(RUTA_DIRECTORIO + nombreArchivo);
        try {
            Files.createDirectories(Paths.get(RUTA_DIRECTORIO));
            file.transferTo(rutaArchivo.toFile());
            return rutaArchivo.toString();
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }
}

